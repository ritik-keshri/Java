#BlueJ class context
comment0.target=ExtendedBufferedReader
comment0.text=\n\ A\ special\ buffered\ reader\ which\ supports\ sophisticated\ read\ access.\n\ <p>\n\ In\ particular\ the\ reader\ supports\ a\ look-ahead\ option,\ which\ allows\ you\ to\ see\ the\ next\ char\ returned\ by\n\ {@link\ \#read()}.\ This\ reader\ also\ tracks\ how\ many\ characters\ have\ been\ read\ with\ {@link\ \#getPosition()}.\n\ </p>\n\n\ @version\ $Id\:\ ExtendedBufferedReader.java\ 1742468\ 2016-05-05\ 20\:02\:35Z\ britter\ $\n
comment1.params=reader
comment1.target=ExtendedBufferedReader(java.io.Reader)
comment1.text=\n\ Created\ extended\ buffered\ reader\ using\ default\ buffer-size\n
comment10.params=
comment10.target=void\ close()
comment10.text=\n\ Closes\ the\ stream.\n\n\ @throws\ IOException\n\ \ \ \ \ \ \ \ \ \ \ \ \ If\ an\ I/O\ error\ occurs\n
comment2.params=
comment2.target=int\ read()
comment3.params=
comment3.target=int\ getLastChar()
comment3.text=\n\ Returns\ the\ last\ character\ that\ was\ read\ as\ an\ integer\ (0\ to\ 65535).\ This\ will\ be\ the\ last\ character\ returned\ by\n\ any\ of\ the\ read\ methods.\ This\ will\ not\ include\ a\ character\ read\ using\ the\ {@link\ \#lookAhead()}\ method.\ If\ no\n\ character\ has\ been\ read\ then\ this\ will\ return\ {@link\ Constants\#UNDEFINED}.\ If\ the\ end\ of\ the\ stream\ was\ reached\n\ on\ the\ last\ read\ then\ this\ will\ return\ {@link\ Constants\#END_OF_STREAM}.\n\n\ @return\ the\ last\ character\ that\ was\ read\n
comment4.params=buf\ offset\ length
comment4.target=int\ read(char[],\ int,\ int)
comment5.params=
comment5.target=java.lang.String\ readLine()
comment5.text=\n\ Calls\ {@link\ BufferedReader\#readLine()}\ which\ drops\ the\ line\ terminator(s).\ This\ method\ should\ only\ be\ called\n\ when\ processing\ a\ comment,\ otherwise\ information\ can\ be\ lost.\n\ <p>\n\ Increments\ {@link\ \#eolCounter}\n\ <p>\n\ Sets\ {@link\ \#lastChar}\ to\ {@link\ Constants\#END_OF_STREAM}\ at\ EOF,\ otherwise\ to\ LF\n\n\ @return\ the\ line\ that\ was\ read,\ or\ null\ if\ reached\ EOF.\n
comment6.params=
comment6.target=int\ lookAhead()
comment6.text=\n\ Returns\ the\ next\ character\ in\ the\ current\ reader\ without\ consuming\ it.\ So\ the\ next\ call\ to\ {@link\ \#read()}\ will\n\ still\ return\ this\ value.\ Does\ not\ affect\ line\ number\ or\ last\ character.\n\n\ @return\ the\ next\ character\n\n\ @throws\ IOException\n\ \ \ \ \ \ \ \ \ \ \ \ \ if\ there\ is\ an\ error\ in\ reading\n
comment7.params=
comment7.target=long\ getCurrentLineNumber()
comment7.text=\n\ Returns\ the\ current\ line\ number\n\n\ @return\ the\ current\ line\ number\n
comment8.params=
comment8.target=long\ getPosition()
comment8.text=\n\ Gets\ the\ character\ position\ in\ the\ reader.\n\n\ @return\ the\ current\ position\ in\ the\ reader\ (counting\ characters,\ not\ bytes\ since\ this\ is\ a\ Reader)\n
comment9.params=
comment9.target=boolean\ isClosed()
numComments=11
