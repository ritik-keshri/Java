#BlueJ class context
comment0.target=Pixel
comment0.text=\n\ The\ <code>Pixel</code>\ class\ represents\ a\ color\ as\ its\ component\ values\ of\n\ red,\ green,\ blue,\ as\ well\ as\ alpha\ (for\ transparency).\n\ \n\ <P>\n\ Each\ of\ the\ component\ values\ of\ a\ pixel\ must\ have\ a\ value\ between\ 0\ and\ 255.\n\ If\ a\ value\ is\ given\ outside\ that\ range,\ it\ is\ changed\ to\ be\ within\ that\ range.\n\ As\ such,\ a\ negative\ value\ would\ be\ set\ to\ 0\ and\ a\ value\ greater\ than\ 255\ would\n\ be\ set\ to\ 255.\n\ \n\ <P>\n\ Example\ usage\:\n\ \n\ <pre>\n\ ImageResource\ image\ \=\ new\ ImageResource();\n\ for\ (Pixel\ p\ \:\ image.pixels())\ {\n\ \ \ \ \ int\ red\ \=\ p.getRed();\n\ \ \ \ \ int\ green\ \=\ p.getGreen();\n\ \ \ \ \ int\ blue\ \=\ p.getBlue();\n\ \ \ \ \ int\ average\ \=\ (red\ +\ green\ +\ blue)\ /\ 3;\n\ \ \ \ \ p.setRed(average);\n\ \ \ \ \ p.setGreen(average);\n\ \ \ \ \ p.setBlue(average);\n\ }\n\ image.draw();\n\ </pre>\n\ \n\ <P>\n\ This\ is\ open-source\ software\ released\ under\ the\ terms\ of\ the\ GPL\n\ (http\://www.gnu.org/licenses/gpl.html).\n
comment1.params=i\ x\ y
comment1.target=Pixel(int,\ int,\ int)
comment1.text=\n\ Creates\ a\ Pixel\ from\ an\ integer\ value.\n\ \n\ @param\ i\ the\ integer\ value\ representing\ all\ the\ color\ components\n\ @param\ x\ the\ x-coordinate\ of\ this\ pixel\ in\ the\ image\n\ @param\ y\ the\ y-coordinate\ of\ this\ pixel\ in\ the\ image\n
comment10.params=
comment10.target=int\ getAlpha()
comment10.text=\n\ Returns\ the\ value\ of\ the\ pixel's\ alpha\ (or\ transparency)\ component.\n\ \n\ @return\ the\ pixel's\ alpha\ value\ within\ the\ range\ 0-255\n
comment11.params=r
comment11.target=void\ setRed(int)
comment11.text=\n\ Resets\ the\ value\ of\ the\ pixel's\ red\ component\ to\ the\ value\ passed\ as\ a\ parameter.\n\ If\ it\ is\ not\ in\ the\ range\ of\ 0-255\ it\ is\ changed\ to\ be\ in\ that\ range.\n\ \n\ @param\ r\ the\ red\ value\n
comment12.params=g
comment12.target=void\ setGreen(int)
comment12.text=\n\ Resets\ the\ value\ of\ the\ pixel's\ green\ component\ to\ the\ value\ passed\ as\ a\ parameter.\n\ If\ it\ is\ not\ in\ the\ range\ of\ 0-255\ it\ is\ changed\ to\ be\ in\ that\ range.\n\ \n\ @param\ g\ the\ green\ value\n
comment13.params=b
comment13.target=void\ setBlue(int)
comment13.text=\n\ Resets\ the\ value\ of\ the\ pixel's\ blue\ component\ to\ the\ value\ passed\ as\ a\ parameter.\n\ If\ it\ is\ not\ in\ the\ range\ of\ 0-255\ it\ is\ changed\ to\ be\ in\ that\ range.\n\ \n\ @param\ b\ the\ blue\ value\n
comment14.params=a
comment14.target=void\ setAlpha(int)
comment14.text=\n\ Resets\ the\ value\ of\ the\ pixel's\ alpha\ (or\ transparency)\ component\ to\ the\ value\ passed\ as\ a\ parameter.\n\ If\ it\ is\ not\ in\ the\ range\ of\ 0-255\ it\ is\ changed\ to\ be\ in\ that\ range.\n\ \n\ @param\ a\ the\ alpha\ value\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\n\ Returns\ the\ string\ representation\ of\ the\ of\ the\ pixel.\n\ \n\ @return\ a\ string\ containing\ the\ RGB\ values\n
comment16.params=
comment16.target=int\ getValue()
comment17.params=pixel
comment17.target=void\ setValue(int)
comment18.params=value
comment18.target=int\ clamp(int)
comment2.params=r\ g\ b\ a\ x\ y
comment2.target=Pixel(int,\ int,\ int,\ int,\ int,\ int)
comment2.text=\n\ Creates\ a\ Pixel\ from\ RGB\ values\ and\ an\ Alpha\ value\ (for\ transparency).\n\ \n\ @param\ r\ the\ red\ value\n\ @param\ g\ the\ green\ value\n\ @param\ b\ the\ blue\ value\n\ @param\ a\ the\ Alpha\ value\n\ @param\ x\ the\ x-coordinate\ of\ this\ pixel\ in\ the\ image\n\ @param\ y\ the\ y-coordinate\ of\ this\ pixel\ in\ the\ image\n
comment3.params=r\ g\ b\ x\ y
comment3.target=Pixel(int,\ int,\ int,\ int,\ int)
comment3.text=\n\ Creates\ a\ Pixel\ from\ RGB\ values.\n\ \n\ @param\ r\ the\ red\ value\n\ @param\ g\ the\ green\ value\n\ @param\ b\ the\ blue\ value\n\ @param\ x\ the\ x-coordinate\ of\ this\ pixel\ in\ the\ image\n\ @param\ y\ the\ y-coordinate\ of\ this\ pixel\ in\ the\ image\n
comment4.params=other
comment4.target=Pixel(edu.duke.Pixel)
comment4.text=\n\ Creates\ a\ new\ Pixel\ from\ with\ the\ same\ values\ as\ the\ other\ pixel\ passed\n\ as\ a\ parameter.\n\ \n\ @param\ other\ another\ pixel\n
comment5.params=
comment5.target=int\ getX()
comment5.text=\n\ Returns\ the\ pixel's\ x-coordinate\ within\ the\ image.\n\n\ @return\ the\ x-coordinate\ of\ this\ pixel.\n
comment6.params=
comment6.target=int\ getY()
comment6.text=\n\ Returns\ the\ pixel's\ y-coordinate\ within\ the\ image.\n\n\ @return\ the\ y-coordinate\ of\ this\ pixel.\n
comment7.params=
comment7.target=int\ getRed()
comment7.text=\n\ Returns\ the\ value\ of\ the\ pixel's\ red\ component.\n\ \n\ @return\ the\ pixel's\ red\ value\ within\ the\ range\ 0-255\n
comment8.params=
comment8.target=int\ getGreen()
comment8.text=\n\ Returns\ the\ value\ of\ the\ pixel's\ green\ component.\n\ \n\ @return\ the\ pixel's\ green\ value\ within\ the\ range\ 0-255\n
comment9.params=
comment9.target=int\ getBlue()
comment9.text=\n\ Returns\ the\ value\ of\ the\ pixel's\ blue\ component.\n\ \n\ @return\ the\ pixel's\ blue\ value\ within\ the\ range\ 0-255\n
numComments=19
